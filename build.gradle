plugins {
    id 'java-library'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management' apply(false)
    id 'org.asciidoctor.jvm.convert' apply(false)
    id 'com.diffplug.spotless' apply(false)
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }


    dependencies {
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter'

        // Web
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // Validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // DataBase
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        runtimeOnly 'com.mysql:mysql-connector-j'
        runtimeOnly 'com.h2database:h2'
        testRuntimeOnly 'com.h2database:h2'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        // Mail
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'commons-io:commons-io:2.13.0'
        implementation 'org.apache.commons:commons-lang3'
        implementation 'org.apache.httpcomponents:httpclient'

        // Test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // Spring Rest Docs
        testImplementation 'org.springframework.restdocs:spring-restdocs-asciidoctor'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    }

}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'

    // Spring Cloud 사용할 경우
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
        }
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootJar.enabled = false
    jar.enabled = true

    test {
        // @Tag("develop"), @Tag("restdocs") 제외하고 실행한다는 의미
        useJUnitPlatform {
            excludeTags('develop', 'restdocs')
        }
    }

    tasks.register('unitTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            excludeTags('develop', 'context', 'restdocs')
        }
    }

    tasks.register('restDocsTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('restdocs')
        }
    }


    tasks.register('developTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('develop')
        }
    }

    tasks.named('asciidoctor') {
        dependsOn restDocsTest
    }
}




